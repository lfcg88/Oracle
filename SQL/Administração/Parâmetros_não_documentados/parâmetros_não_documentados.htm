<html>
  <head>
    <title>Parâmetros não Documentados</title>
  </head>
<body LINK=#000000 VLINK=#000000 ALINK=#000000 HLINK=#000000 bgcolor=#F0F0F0 BACKGROUND=imagem_fundo_3.jpg><form actio="p_1_1_8.asp" method=post>   <table width=100% border=0>
    <tr>

     <th width=20% nowrap align=left>
      <div align=left>    
SYSTEM@stats
      </div>

      <div align=left>    
        <b>
        <font color="#000000" face="verdana, arial" size="2">
ORCL92
        </font>
        </b>
      </div>
      <div align=left>
        <b>
        <font color="#000000" face="verdana, arial" size="2">
Versão: 9.2.0.1.0
        </font>
        </b>
      </div>
      <div align=left>
        <b>
        <font color="#000000" face="verdana, arial" size="2">
          StatsPack:
Não Logado
        </font>
        </b>
      </div>

      <div align=left>
        <b>
        <font color="#000000" face="verdana, arial" size="2">
          Rman:
Não Logado

        </font>
        </b>
      </div>
     </th>

     <th width=60% nowrap align=center valign=top>
      <b>
      <div align=center valign=botton>
      <H1>M.  I.   -   D.  B.  A.</H1>
      </div>  
 
      <div align=center>
        <b>
        <font color="#000000" face="verdana, arial" size="3">
Parâmetros não Documentados
        </font>
        </b>
      </div>
      </b> 
     </th>

     <th width=20% nowrap align=right>
      <b>
      <div align=right>    

        <b>
        <font color="#000000" face="verdana, arial" size="2">

        <A HREF="p_visao_geral.asp">Visão Geral</A>
        </font>

      </div>

      <div align=right>    
        <b>
        <font color="#000000" face="verdana, arial" size="2">
<A HREF="p_ajuda.asp?TELA=P_1_1_9.ASP">Ajuda</A>
        </font>
        </b>
      </div>
      <div align=right>
        <b>
        <font color="#000000" face="verdana, arial" size="2">
<A HREF="menu.asp">Menu</A>
        </font>
        </b>
      </div>
      <div align=right>
        <b>
        <font color="#000000" face="verdana, arial" size="2">
        <A HREF="login.asp">Login</A>
        </font>
        </b>
      </div>

      <div align=right>
        <b>
        <font color="#000000" face="verdana, arial" size="2">

        <A HREF="p_termino.asp">Término</A>
        </font>
        </b>
      </div>
     </th>
    </tr> 
   </table> 
   <font color="#000000" face="verdana, arial" size="2">


   <table width=100% border=0 cellspacing=1 cellpadding=0 align=center>
     <tr>
       <th width=70% align=left>
         <font color="#000000" face="verdana, arial" size="2">
         <HR SIZE=2 WIDTH=100% align=left NOSHADE>
       </th>
       <th width=5% align=center nowrap>
         <font color="#000000" face="verdana, arial" size="2">
         V. 1.2
       </th>
       <th width=1% align=right>
         <HR SIZE=2 WIDTH=100% align=right NOSHADE>
       </th>
    </tr>
  </table>

   


   </font>

     <br>
<br><table width=100% border=2 cellspacing=1 cellpadding=0 align=center><tr><b><td><b><font color="#000000"</font><div align=left>Parâmetro</div></b></td><td><b><font color="#000000"</font><div align=left>Descrição</div></b></td><td><b><font color="#000000"</font><div align=center>Valor Atual</div></b></td><td><b><font color="#000000"</font><div align=center>Def.</div></b></td><td><b><font color="#000000"</font><div align=center>Valor Default</div></b></td></tr><tr><td><b><font color="#000000"</font><div align=left>_abort_recovery_on_join </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, abort recovery on join reconfigurations </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_active_standby_fast_reconfiguration </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE optimize dlm reconfiguration for active/standby OPS </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_adaptive_direct_read </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Adaptive Direct Read </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_adaptive_fetch_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable/disable adaptive fetch in parallel group by </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_affinity_on </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable/disable affinity at run time </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_allocate_creation_order </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>should files be examined in creation order during allocation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_allocation_update_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>interval at which successful search in L1 should be updated </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_allow_error_simulation </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Allow error simulation for testing </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_allow_read_only_corruption </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allow read-only open even if database is corrupt </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_allow_resetlogs_corruption </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allow resetlogs even if it will cause corruption </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_allow_terminal_recovery_corruption </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Finish terminal recovery even if it may cause corruption </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_all_shared_dblinks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>treat all dblinks as shared </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_always_anti_join </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>always use this method for anti-join when possible </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>CHOOSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_always_semi_join </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>always use this method for semi-join when possible </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>CHOOSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_always_star_transformation </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>always favor use of star transformation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_app_ctx_vers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable app ctx versioning </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_aq_tm_scanlimit </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>scan limit for Time Managers to clean up IOT </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_arch_io_slaves </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>ARCH I/O slaves </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_async_recovery_claims </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, issue recovery claims asynchronously (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_async_recovery_reads </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, issue recovery reads asynchronously (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_avoid_prepare </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, do not prepare a buffer when the master is local (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_backup_disk_io_slaves </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>BACKUP Disk I/O slaves </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_backup_io_pool_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>memory to reserve from the large pool </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>262144 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_bitmap_or_improvement_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>controls extensions to partition pruning for general predicates </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_b_tree_bitmap_plans </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable the use of bitmap plans for tables w. only B-tree indexes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_bump_highwater_mark_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>how many blocks should we allocate per free list on advancing HW </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_bwr_for_flushed_pi </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, generate a BWR for a flushed PI (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cgs_send_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>CGS send timeout value </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>300 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_check_block_after_checksum </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>perform block check after checksum if both are turned on </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cleanup_rollback_entries </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>no. of undo entries to apply per transaction cleanup </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_close_cached_open_cursors </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>close cursors cached by PL/SQL at each commit </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_collect_undo_stats </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Collect Statistics v$undostat </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_column_elimination_off </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>turn off predicate-only column elimination </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_column_tracking_level </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>column usage tracking </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_compatible_no_recovery </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Database will be compatible unless crash or media recovery is ne </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0.0.0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_complex_view_merging </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable complex view merging </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_controlfile_enqueue_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>control file enqueue timeout in seconds </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>900 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_corrupted_rollback_segments </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>corrupted undo segment list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cost_equality_semi_join </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enables costing of equality semi-join </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cpu_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>current number of cpu's for this instance </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cpu_to_io </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>divisor for converting CPU cost to I/O cost </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cr_grant_global_role </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, grant lock for CR requests when block is in global role </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cr_grant_local_role </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, grant lock for CR using 3way ping when block in local r </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cr_server_log_flush </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, flush redo log before serving a CR buffer (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cursor_db_buffers_pinned </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>additional number of buffers a cursor can pin at once </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>18 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_cursor_plan_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable collection and display of cursor plans </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_aging_cool_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Touch count set when buffer cooled </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_aging_freeze_cr </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Make CR buffers always be too cold to keep in cache </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_aging_hot_criteria </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Touch count which sends a buffer to head of replacement list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_aging_stay_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Touch count set when buffer moved to head of replacement list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_aging_touch_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Touch count which sends a buffer to head of replacement list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_always_check_system_ts </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Always perform block check and checksum for System tablespace </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_buffers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of database blocks cached in memory: hidden parameter </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_cache_clone </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Always clone data blocks on get (for debugging) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_cache_num_umap </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of unmapped buffers (for tracking swap calls on blocks) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_cache_protect </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>protect database blocks (true only when debugging) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_check_for_debug </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Check more and dump block before image for debugging </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_granule_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of lru latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_hash_buckets </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of database block hash buckets </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>6007 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_hash_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of database block hash latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1024 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_hi_priority_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Fraction of writes for high priority reasons </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_lru_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of lru latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>8 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_max_cr_dba </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Maximum Allowed Number of CR buffers per dba </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>6 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_max_dirty_target </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Upper bound on modified buffers/recovery reads </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_max_scan_pct </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Percentage of buffers to inspect when looking for free </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>40 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_med_priority_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Fraction of writes for medium priority reasons </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_numa </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of NUMA nodes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_prefetch_quota </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Prefetch quota as a percent of cache size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_block_trace_protect </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace buffer protect calls </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_cache_advice_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>cache advisory simulation batch size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>128 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_cache_advice_sample_factor </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>cache advisory sampling factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_file_direct_io_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Sequential I/O buf size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1048576 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_file_noncontig_mblock_read_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of noncontiguous db blocks to be prefetched </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>11 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dbg_proc_startup </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>debug process startup </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_handles </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>System-wide simultaneous buffer operations </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>750 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_handles_cached </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Buffer handles cached each process </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_large_dirty_queue </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of buffers which force dirty queue to be written </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>25 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_mttr_advice </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>MTTR advisory </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>ON </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_mttr_partitions </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of partitions for MTTR advisory </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_mttr_sample_factor </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>MTTR simulation sampling factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>64 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_mttr_sim_target </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>MTTR simulation targets </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_mttr_sim_trace_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>MTTR simulation trace size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>256 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_mttr_trace_to_alert </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>dump trace entries to alert file </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_percent_hot_default </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Percent of default buffer pool considered hot </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>50 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_percent_hot_keep </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Percent of keep buffer pool considered hot </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_percent_hot_recycle </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Percent of recycle buffer pool considered hot </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dbwr_async_io </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Enable dbwriter asynchronous writes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_writer_chunk_writes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of writes DBWR should wait for </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_writer_histogram_statistics </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maintain dbwr histogram statistics in x$kcbbhs </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_writer_max_writes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Max number of outstanding DB Writer IOs </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_db_writer_scan_depth_pct </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Percentage of LRU buffers for dbwr to scan when looking for dirt </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>25 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dbwr_scan_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>dbwriter scan interval </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dbwr_tracing </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Enable dbwriter tracing </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_default_non_equality_sel_check </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>sanity check on default selectivity for like/range predicate </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_defer_multiple_waiters </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, defer down converts when there were waiters (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_diag_daemon </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>start DIAG daemon </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_file_locks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable file locks for control, data, redo log files </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_incremental_checkpoints </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Disable incremental checkpoints for thread recovery </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_kcbhxor_osd </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable kcbh(c)xor OSD functionality </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_latch_free_SCN_writes_via_32cas </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable latch-free SCN writes using 32-bit compare & swap </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_latch_free_SCN_writes_via_64cas </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable latch-free SCN writes using 64-bit compare & swap </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_logging </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Disable logging </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_multiple_block_sizes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable multiple block size support (for debugging) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_ntlog_events </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Disable logging to NT event log </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_odm </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable odm feature </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_recoverable_recovery </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Disable the new recoverable recovery mechanism </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_disable_system_state </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable system state dump </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_discrete_transactions_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable OLTP mode </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dispatcher_rate_scale </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>scale to display rate statistic (100ths of a second) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dispatcher_rate_ttl </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>time-to-live for rate statistic (100ths of a second) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_distributed_recovery_connection_hold_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of seconds RECO holds outbound connections open </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>200 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dlmtrace </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Trace string of lock types(s) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_domain_index_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum number of rows from one call to domain index fetch routi </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_domain_index_dml_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum number of rows for one call to domain index dml routines </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>200 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dss_cache_flush </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable full cache flush for parallel execution </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dump_MTTR_to_trace </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Dump High Availability MTTR infromation to CKPT trace file </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dump_system_state_scope </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>scope of sysstate dump during instance termination </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>local </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dynamic_rls_policies </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>rls policies are dynamic </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_dynamic_stats_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>delay threshold (in seconds) between sending statistics messages </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>30 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_eliminate_common_subexpr </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enables elimination of common sub-expressions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_block_level_transaction_recovery </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable block level recovery </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_cscn_caching </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable commit SCN caching for all transactions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_default_affinity </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>to enable default implementation of affinity osds </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_kgh_policy </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>temporary to disable/enable kgh policy </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_list_io </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Enable List I/O </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_multitable_sampling </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable multitable sampling </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_NUMA_optimization </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Enable NUMA specific optimizations </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enable_type_dep_selectivity </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable type dependent selectivity estimates </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enqueue_debug_multi_instance </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>debug enqueue multi instance </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enqueue_hash </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enqueue hash table length </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>375 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enqueue_hash_chain_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enqueue hash chain latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_enqueue_locks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>locks for managed enqueues </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2230 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_explain_rewrite_mode </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allow additional messages to be generated during explain rewrite </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_fairness_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of times to CR serve before downgrading lock (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_fast_full_scan_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable/disable index fast full scan </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_fifth_spare_parameter </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>fifth spare parameter - string </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_first_spare_parameter </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>first spare parameter - integer </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_force_datefold_trunc </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>force use of trunc for datefolding rewrite </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_force_temptables_for_gsets </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>executes concatenation of rollups using temp tables </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_fourth_spare_parameter </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>fourth spare parameter - string </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_full_pwise_join_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable full partition-wise join when TRUE </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gby_onekey_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable use of one comparison of all group by keys </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gc_defer_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>how long to defer down converts for hot buffers (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gc_integrity_checks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, enable expensive integrity checks (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gc_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of latches per LMS process (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gcs_fast_reconfig </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, enable fast reconfiguration for gcs locks </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gcs_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of gcs resource hash latches to be allocated </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>128 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gcs_resources </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of gcs resources to be allocated </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_generalized_pruning_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>controls extensions to partition pruning for general predicates </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_groupby_nopushdown_cut_ratio </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>groupby nopushdown cut ratio </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_groupby_orderby_combine </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>groupby/orderby don't combine threshold </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_gs_anti_semi_join_allowed </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable anti/semi join for the GS query </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_hard_protection </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE enable H.A.R.D specific format changes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_hash_multiblock_io_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of blocks hash join will read/write at once </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_high_server_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>high server thresholds </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_idl_conventional_index_maintenance </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable conventional index maintenance for insert direct load </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ignore_desc_in_index </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>ignore DESC in indexes, sort those columns ascending anyhow </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_improved_outerjoin_card </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>improved outer-join cardinality calculation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_improved_row_length_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable the improvements for computing the average row length </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_imr_active </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Activate Instance Membership Recovery feature </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_imr_max_reconfig_delay </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Maximum Reconfiguration delay (seconds) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>300 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_imr_splitbrain_res_wait </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Maximum wait for split-brain resolution (seconds) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>600 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_index_join_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable the use of index joins </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_index_prefetch_factor </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>index prefetching factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_init_sql_file </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>File containing SQL statements to execute upon database creation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>%ORACLE_HOME%\RDBMS\ADMIN\SQL.BSQ </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_insert_enable_hwm_brokered </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>during parallel inserts high water marks are brokered </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_instance_type </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>type of instance to be executed </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>RDBMS </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_inst_locking_period </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>period an instance can retain a newly acquired level1 bitmap </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_interconnect_checksum </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, checksum interconnect blocks (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_intrapart_pdml_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Enable intra-partition updates/deletes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ioslave_batch_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Per attempt IOs picked </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ioslave_issue_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>IOs issued before completion check </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>500 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_io_slaves_disabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Do not use I/O slaves </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_job_queue_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Wakeup interval in seconds for job queue co-ordinator </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_commit </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, call kjbcommit (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_conservative_log_flush </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, conservatively log flush before CR serving (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_debug </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, record le history (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_index_split </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, reject pings on blocks in middle of a split (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_local_file_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>how often to check for local files (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_name_table_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of name table latches (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>8 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_recovery_read_batch </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>recovery read batch size (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>8 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_undo_grouping </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>grouping for undo block locks (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_undo_locks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of locks per undo segment (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>128 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kcl_use_cr </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, use Fusion CR buffers (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kdbl_enable_post_allocation </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allocate dbas after populating data buffers </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_keep_recovery_buffers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, make recovery buffers current (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_keep_remote_column_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>remote column size does not get modified </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kghdsidx_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>max kghdsidx count </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kgl_bucket_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>index to the bucket count array </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>9 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kgl_latch_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of library cache latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kgl_multi_instance_invalidation </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>whether KGL to support multi-instance invalidations </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kgl_multi_instance_lock </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>whether KGL to support multi-instance locks </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kgl_multi_instance_pin </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>whether KGL to support multi-instance pins </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kglsim_maxmem_percent </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>max percentage of shared pool size to be used for KGL advice </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kkfi_trace </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace expression substitution </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_kolfuseslf </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allow kolf to use slffopen </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksdxw_cini_flg </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>ksdxw context initialization flag </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksdxw_nbufs </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>ksdxw number of buffers in buffered mode </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksdxw_num_pgw </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of watchpoints on a per-process basis </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksdxw_num_sgw </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of watchpoints to be shared by all processes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksdxw_stack_depth </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of PCs to collect in the stack when watchpoint is hit </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksi_trace </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>KSI trace string of lock type(s) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksmg_granule_locking_status </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>granule locking status </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksmg_granule_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>granule size in bytes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4194304 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ksu_diag_kill_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of seconds ksuitm waits before killing diag </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ktc_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of ktc latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ktu_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of KTU latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_large_pool_min_alloc </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>minimum allocation size in bytes for the large allocation pool </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>16000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_last_allocation_period </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>period over which an instance can retain an active level1 bitmap </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_classes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch classes override </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_0 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 0 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_1 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 1 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_2 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 2 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_3 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 3 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_4 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 4 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_5 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 5 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_6 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 6 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_class_7 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>latch class 7 </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_miss_stat_sid </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Sid of process for which to collect latch stats </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_latch_recovery_alignment </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>align latch recovery structures </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>998 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ldr_io_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>size of write IOs used during a load operation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>262144 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_left_nested_loops_random </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable random distribution method for left of nestedloops </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lgwr_async_io </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>LGWR Asynchronous IO enabling boolean flag </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lgwr_delay_write </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>LGWR write delay for debugging </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lgwr_io_slaves </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>LGWR I/O slaves </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lgwr_max_ns_wt </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Maximum wait time for lgwr to allow NetServer to progress </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>30 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lgwr_ns_nl_max </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Variable to simulate network latency </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lgwr_ns_nl_min </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Variable to simulate network latency </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>500 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lgwr_ns_sim_err </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Variable to simulate errors lgwrns </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_library_cache_advice </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>whether KGL advice should be turned on </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_like_with_bind_as_equality </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>treat LIKE predicate with bind as an equality predicate </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_activate_lms_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>threshold value to activate an additional lms </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_cache_lvl0_cleanup </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>how often to cleanup level 0 cache res (in sec) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_cache_res_cleanup </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>percentage of cached resources should be cleanup </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>25 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_cache_res_type </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>cache resource: string of lock types(s) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_dd_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>dd time interval in seconds </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>60 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_direct_sends </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Processes which will do direct sends </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>all </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_drm_window </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>dynamic remastering bucket window size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_dynamic_lms </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>dynamic lms invocation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_dynamic_load </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>dynamic load adjustment </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_dynamic_remastering </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE enables dynamic remastering </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_enqeue_freelist </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of enqueue freelist </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_enq_lock_freelist </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of ges enqueue element freelist </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_enq_rcfg </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE enables enqueue reconfiguration </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_file_affinity </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>mapping between file id and master instance number </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_lmd_waittime </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>default wait time for lmd </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_lms </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of background global cache server processes to start </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_lms_waittime </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>default wait time for lms </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_locks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of enqueues configured for cluster database </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>12000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_master_weight </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>master resource weight for this instance </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_max_lms </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>max. number of background global cache server processes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_min_lms </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>min. number of background global cache server processes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_msg_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES batch message size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2048 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_msg_cache_thresholds </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES message buffer caching threshold </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_msg_cleanup_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES message buffer cleanup interval time </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_node_join_opt </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>cluster database node join optimization in reconfig </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_non_fault_tolerant </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>disable cluster database fault-tolerance mode </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_num_pcmhv_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of latches covering the PCM HV buckets in cgs </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_process_batching </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES implicit process batching for IPC messages </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_proc_freeze_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>reconfiguration: process freeze timeout </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>300 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_procs </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of client processes configured for cluster database </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>127 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_rcfg_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Reconfiguration timeout </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>180000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_rcv_buffer_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>the size of receive buffer </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32768 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_res_hash_bucket </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of resource hash buckets </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_res_part </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of resource partition configured for gcs </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1289 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_ress </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of resources configured for cluster database </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>6000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_send_buffers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of cluster database send buffers </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_send_queue_batching </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES send queue message batching </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_send_queue_length </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES send queue maximum length </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_share_lock_opt </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE enables share lock optimization </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_sq_batch_factor </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES send queue minimum batching factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_sync_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Synchronization timeout for DLM reconfiguration steps </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_ticket_active_sendback </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Flow control ticket active sendback threshold </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_tickets </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GES messaging tickets </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_tx_delta </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>TX lock localization delta </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>16 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_validate_resource_type </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE enables resource name validation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lm_xids </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of transaction IDs configured for cluster database </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>139 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_load_without_compile </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Load PL/SQL or Database objects without compilation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>none </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_local_communication_costing_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable local communication costing when TRUE </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_local_communication_ratio </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>set the ratio between global and local communication (0..100) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>50 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_lock_sga_areas </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Lock specified areas of the SGA in physical memory </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_archive_buffers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Number of buffers to allocate for archiving </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_archive_buffer_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Size of each archival buffer in log file blocks </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2048 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_archive_callout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>archival callout </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_archive_delta_sync_wait </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>iterative sleep time in centiseconds seconds when SYNC=PARALLEL </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_archive_net_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum network wait time in seconds when SYNC=PARALLEL </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_blocks_during_backup </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>log block images when changed during backup </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_buffers_corrupt </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>corrupt redo buffers before write </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_buffers_debug </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>debug redo buffers (slows things down) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_checkpoint_recovery_check </div></b></td><td><b><font color="#A0A0A0"</font><div align=left># redo blocks to verify after checkpoint </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_committime_block_cleanout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Log commit-time block cleanout </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_debug_multi_instance </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>debug redo multi instance code </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_io_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>automatically initiate log write if this many redo blocks in buf </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_simultaneous_copies </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of simultaneous copies into redo buffer(# of copy latches </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_space_errors </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>should we report space errors to alert log </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_log_switch_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Maximum number of seconds redos in the current log could span </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_low_server_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>low server thresholds </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_master_direct_sends </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>direct sends for messages from master (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>31 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mav_refresh_consistent_read </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>refresh materialized views using consistent read snapshot </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mav_refresh_double_count_prevented </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>materialized view MAV refreshes avoid double counting </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mav_refresh_opt </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>optimizations during refresh of materialized views </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mav_refresh_unionall_tables </div></b></td><td><b><font color="#A0A0A0"</font><div align=left># tables for union all expansion during materialized view refres </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_max_exponential_sleep </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>max sleep during exponential backoff </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_max_sleep_holding_latch </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>max time to sleep while holding a latch </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_messages </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>message queue resources - dependent on # processes & # buffers </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>300 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_minimal_stats_aggregation </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>prohibit stats aggregation at compile/partition maintenance time </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_minimum_giga_scn </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Minimum SCN to start with in 2^30 units </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_multi_join_key_table_lookup </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>TRUE iff multi-join-key table lookup prefetch is enabled </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mv_refresh_delta_fraction </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>delta mv as fractional percentage of size of mv </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mv_refresh_eut </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>refresh materialized views using EUT(partition)-based algorithm </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mv_refresh_new_setup_disabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>materialized view MV refresh new setup disabling </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mv_refresh_selections </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>create materialized views with selections and fast refresh </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_mv_refresh_use_stats </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>pass cardinality hints to refresh queries </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_nchar_imp_cnv </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>NLS allow Implicit Conversion between CHAR and NCHAR </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ncmb_readahead_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable multi-block readahead for an index scan </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ncmb_readahead_tracing </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>turn on multi-block readahead tracing </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_nested_loop_fudge </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>nested loop fudge </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_nested_mav_fast_oncommit_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>nested MAV refresh fast on commit allowed </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_new_initial_join_orders </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable initial join orders based on new ordering heuristics </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_new_sort_cost_estimate </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enables the use of new cost estimate for sort </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_no_objects </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>no object features are used </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_no_or_expansion </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OR expansion during optimization disabled </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ns_max_flush_wt </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Flush wait time for NetServer to flush oustanding writes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>30 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_NUMA_instance_mapping </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Set of nodes that this instance should run on </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Not specified </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_NUMA_pool_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>aggregate size in bytes of NUMA pool </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Not specified </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_number_cached_attributes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum number of cached attributes per instance </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_num_longop_child_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of child latches for long op array </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_object_statistics </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable the object level statistics collection </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_offline_rollback_segments </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>offline undo segment list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ogms_home </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>GMS home directory </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_buffer_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate max buffer size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1048576 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_child_fragment_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate child fragment size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_child_max_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate child list max size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32768 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_function_cache_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate function cache enabler </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_function_merge_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate function merge threshold </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32768 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_max_thread_tuples </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate max thread tuples creation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_min_buffer_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate min buffer size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1024 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_min_thread_status </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate minimum cardinality of dimensions for thread </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>64 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_statlen_thresh </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate status array usage threshold </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1024 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_store_probability </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate function storeback probability </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_worklist_max </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate max worklists generated at once </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_aggregate_work_per_thread </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Aggregate max work parents </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1024 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_allocate_errorlog_format </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Allocate Errorlog Format </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>%8p %8y %8z %e (%n) </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_allocate_errorlog_header </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Allocate Errorlog Header format </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Dim      Source   Basis
%-8d %-8s %-8b Description
-------- -------- -------- ----------- </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_continuous_trace_file </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Specify TRUE to enable continuous OLAP tracing - otherwise only  </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_dimsave_restore_cache_values </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP Dimsave restores cached dimension values </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_eif_export_lob_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP EIF Export BLOB size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2147483647 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_parallel_update_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP parallel update threshold in pages </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_olap_poutlog_echo_to_eventlog </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>OLAP POutLog copy output to event log (tracefile) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_old_connect_by_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable/disable old connect by </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_omf </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable/disable OMF </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>enabled </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_oneside_colstat_for_equijoins </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>sanity check on default selectivity for like/range predicate </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_open_files_limit </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Limit on number of files opened by I/O subsystem </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4294967294 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optim_adjust_for_part_skews </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>adjust stats for skews across partitions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optim_enhance_nnull_detection </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>TRUE to enable index [fast] full scan more often </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_adjust_for_nulls </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>adjust selectivity for null values </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_choose_permutation </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>force the optimizer to use the specified permutation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_cost_model </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>optimizer cost model </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>CHOOSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_degree </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>force the optimizer to use the same degree of parallelism </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_dyn_smp_blks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of blocks for optimizer dynamic sampling </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_mode_force </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>force setting of optimizer mode for user recursive SQL also </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_new_join_card_computation </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>compute join cardinality using non-rounded input values </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_percent_parallel </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>optimizer percent parallel </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>101 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_search_limit </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>optimizer search limit </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_system_stats_usage </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>system statistics usage </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_undo_changes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>undo changes to query optimizer </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optimizer_undo_cost_change </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>optimizer undo cost change </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>9.2.0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optim_new_default_join_sel </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>improves the way default equijoin selectivity are computed </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_optim_peek_user_binds </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable peeking of user binds </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_oracle_trace_events </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Oracle TRACE event flags </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_oracle_trace_facility_version </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Oracle TRACE facility version </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ordered_nested_loop </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable ordered nested loop costing </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ordered_semijoin </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable ordered semi-join subquery </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_or_expand_nvl_predicate </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable OR expanded plan for NVL/DECODE predicate </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_adaptive_max_users </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum number of users running with default DOP </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_broadcast_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable broadcasting of small inputs to hash and sort merge joins </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_default_max_instances </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>default maximum number of instances for parallel query </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_execution_message_align </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Alignment of PX buffers to OS page boundary </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_fake_class_pct </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>fake db-scheduler percent used for testing </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallelism_cost_fudge_factor </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>set the parallelism cost fudge factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>350 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_load_balancing </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>parallel execution load balanced slave allocation </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_load_bal_unit </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of threads to allocate per instance </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_min_message_pool </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>minimum size of shared pool memory to reserve for pq servers </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>64440 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_recovery_stopat </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>stop at -position- to step through SMON </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32767 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_server_idle_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>idle time before parallel query server dies </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_server_sleep_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>sleep time between dequeue timeouts (in 1/100ths) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_parallel_txn_global </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable parallel_txn hint with updates and deletes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_partial_pwise_join_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable partial partition-wise join when TRUE </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_passwordfile_enqueue_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>password file enqueue timeout in seconds </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>900 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pcm_shadow_locks </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of pcm shadow locks to be allocated </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pct_refresh_double_count_prevented </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>materialized view PCT refreshes avoid double counting </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pdml_gim_sampling </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>control separation of global index maintenance for PDML </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pdml_gim_staggered </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>slaves start on different index when doing index maint </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pdml_slaves_diff_part </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>slaves start on different partition when doing index maint </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pga_max_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Maximum size of the PGA memory for one process </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>209715200 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_ping_level </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>fusion ping level (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_plsql_dump_buffer_events </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>conditions upon which the PL/SQL circular buffer is dumped </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pmon_load_constants </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>server load balancing constants (S,P,D,I,L,C,M) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>300,192,64,3,10,10,0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_precompute_gid_values </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>precompute gid values and copy them before returning a row </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_predicate_elimination_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allow predicate elimination if set to TRUE </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pred_move_around </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enables predicate move-around </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_pre_rewrite_push_pred </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>push predicates into views before rewrite </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_project_view_columns </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable projecting out unreferenced columns of a view </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_push_join_predicate </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable pushing join predicate inside a view </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_push_join_union_view </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable pushing join predicate inside a union view </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_async_getgranule </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>asynchronous get granule in the slave </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_broadcast_fudge_factor </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>set the tq broadcasting fudge factor percentage </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_dynamic_opt </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>turn off/on restartable qerpx dynamic optimization </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_dynamic_sample_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>num of samples for restartable qerpx dynamic optimization </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>50 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_granule_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>default size of a rowid range granule (in KB) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_index_sampling </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>parallel query sampling for index create (100000 = 100%) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>200 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_kxib_tracing </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>turn on kxib tracing </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_load_publish_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>interval at which LMON will check whether to publish PX load </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>200 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_max_granules_per_slave </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum number of rowid range granules to generate per slave </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_min_granules_per_slave </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>minimum number of rowid range granules to generate per slave </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>13 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_no_stealing </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>prevent parallel granule stealing in shared nothing environment </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_px_trace </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>px trace parameter </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>none </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_PX_use_large_pool </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Use Large Pool as source of PX buffers </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_cost_rewrite </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>perform the cost based rewrite with materialized views </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_drj </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>mv rewrite and drop redundant joins </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_expression </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>rewrite with cannonical form for expressions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_fpc </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>mv rewrite fresh partition containment </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_fudge </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>cost based query rewrite with MVs fudge factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>90 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_jgmigrate </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>mv rewrite with jg migration </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_maxdisjunct </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>query rewrite max disjuncts </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>257 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_or_error </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allow query rewrite, if referenced tables are not dataless </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_vop_cleanup </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>prune frocol chain before rewrite after view-merging </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_1 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>perform query rewrite before&after or only before view merging </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_query_rewrite_2 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>perform query rewrite before&after or only after view merging </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_realfree_heap_free_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>threshold for performing real-free, in Kbytes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4194303 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_realfree_heap_max_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>minimum max total heap size, in Kbytes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>32768 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_realfree_heap_mode </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>mode flags for real-free heap </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_recovery_asserts </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, enable expensive recovery sanity checks (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_recovery_claim_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of messages to batch in a recovery claim message (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_recovery_percentage </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>recovery buffer cache percentage </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>50 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_release_insert_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum number of unusable blocks to unlink from freelist </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_reliable_block_sends </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, block sends across interconnect are reliable </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_reuse_index_loop </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of blocks being examine for index block reuse </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_rollback_segment_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of undo segments </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_rollback_segment_initial </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>starting undo segment number </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_row_cache_cursors </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of cached cursors for row cache management </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>10 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_row_cr </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable row cr for all sql </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_rowsource_execution_statistics </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, Oracle will collect rowsource level statistics </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_scn_scheme </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>SCN scheme </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_second_spare_parameter </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>second spare parameter - integer </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_send_ast_to_foreground </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, send ast message to foreground </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_send_close_with_block </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, send close with block even with direct sends </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_send_requests_to_PI </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, try to send CR requests to PI buffers (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_serial_direct_read </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable direct read in serial </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_session_idle_bit_latches </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>one latch per session or a latch per group of sessions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_seventh_spare_parameter </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>seventh spare parameter - string list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_shared_pool_reserved_min_alloc </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>minimum allocation size in bytes for reserved area of shared poo </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>4400 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_shared_pool_reserved_pct </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>percentage memory of the shared pool allocated for the reserved  </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_shrunk_aggs_disable_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>percentage of exceptions at which to switch to full length aggs </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>60 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_shrunk_aggs_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable use of variable sized buffers for non-distinct aggregates </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_side_channel_batch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of messages to batch in a side channel message (DFS) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_side_channel_batch_timeout </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>timeout before shipping out all the batched side channel message </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_single_process </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>run without detached processes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sixth_spare_parameter </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>sixth spare parameter - string list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_skip_assume_msg </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, skip assume message for consigns at the master </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_slave_mapping_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable slave mapping when TRUE </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_slave_mapping_group_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>force the number of slave group in a slave mapper </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_small_table_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>threshold level of table size for direct reads </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>60 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_advice_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, enable v$pga_advice </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_advice_log_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>overwrites default size of the PGA advice workarea history log </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_auto_cost_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, use the AUTO size policy cost functions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_auto_max_io_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Maximum IO size (in KB) used by sort/hash-join in auto mode </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>248 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_auto_min_io_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Minimum IO size (in KB) used by sort/hash-join in auto mode </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>56 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_bound </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>overwrites memory manager automatically computed bound </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_control </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>provides controls on the memory manager </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_max_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum work area size in auto mode (serial) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>512 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_min_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>minimum work area size in auto mode </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>128 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_px_max_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum work area size in auto mode (global) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3072 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smm_trace </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Turn on/off tracing for SQL memory manager </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smon_consume_post </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>consume any extra posts after completion of transaction recovery </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smon_internal_errlimit </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>limit of SMON internal errors </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smu_debug_mode </div></b></td><td><b><font color="#A0A0A0"</font><div align=left><debug-flag> - set debug event for testing SMU operations </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smu_error_simulation_site </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>site ID of error simulation in KTU code </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_smu_error_simulation_type </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>error type for error simulation in KTU code </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sort_elimination_cost_ratio </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>cost ratio for sort eimination under first_rows mode </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sortmerge_inequality_join_off </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>turns off sort-merge join on inequality </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sort_multiblock_read_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>multi-block read count for sort </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sort_space_for_write_buffers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>tenths of sort_area_size devoted to direct write buffers </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_spin_count </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Amount to spin waiting for a latch </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sql_connect_capability_override </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>SQL Connect Capability Table Override </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sql_connect_capability_table </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>SQL Connect Capability Table (testing only) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_sqlexec_progression_cost </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>sql execution progression monitoring cost threshold </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>1000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_subquery_pruning_cost_factor </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>subquery pruning cost factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>20 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_subquery_pruning_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable the use of subquery predicates to perform pruning </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_subquery_pruning_mv_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable the use of subquery predicates with MVs to perform prunin </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_subquery_pruning_reduction </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>subquery pruning reduction factor </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>50 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_system_index_caching </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>optimizer percent system index caching </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_system_trig_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>are system triggers enabled </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_table_lookup_prefetch_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>table lookup prefetch vector size </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>40 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_table_lookup_prefetch_thresh </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>table lookup prefetch threshold </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>2 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_table_scan_cost_plus_one </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>bump estimated full table scan and index ffs cost by one </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_temp_tran_block_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>number of blocks for a dimension before we temp transform </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_temp_tran_cache </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>determines if temp table is created with cache option </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_test_ksusigskip </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>test the function ksusigskip </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>5 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_test_param_1 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>test parmeter 1 - integer </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>25 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_test_param_2 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>test parameter 2 - string </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_test_param_3 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>test parameter 3 - string </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_test_param_4 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>test parameter 4 - string list </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_test_param_5 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>test parmeter 5 - deprecated integer </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>25 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_test_param_6 </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>test parmeter 6 - size (ub8) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_third_spare_parameter </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>third spare parameter - integer </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_tq_dump_period </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>time period for duping of TQ statistics (s) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_archive </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>start DIAG process </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_buffer_flushes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace buffer flushes if otrace cacheIO event is set </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_buffer_gets </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace kcb buffer gets if otrace cacheIO event is set </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_buffers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace buffer sizes per process </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>ALL:256 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_cr_buffer_creates </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace cr buffer creates if otrace cacheIO event is set </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_events </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace events enabled at startup </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>Sem Valor </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_file_size </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum size of trace file (in number of trace records) </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>65536 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_files_public </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Create publicly accessible trace files </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_flush_processes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace data archived by DIAG for these processes </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>ALL </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_multi_block_reads </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace multi_block reads if otrace cacheIO event is set </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_options </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace data flush options </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>text,multiple </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_pin_time </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>trace how long a current pin is held </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_trace_processes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable KST tracing in process </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>ALL </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_transaction_recovery_servers </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>max number of parallel recovery slaves that may be used </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_tts_allow_nchar_mismatch </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>allow plugging in a tablespace with a different national charact </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_two_pass </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable two-pass thread recovery </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_two_pass_reverse_polish_enabled </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>uses two-pass reverse polish alg. to generate canonical forms </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_union_rewrite_for_gs </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>expand queries with GSets into UNIONs for rewrite </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>CHOOSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_unnest_notexists_sq </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>unnest NOT EXISTS subquery with one or more tables if possible </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>SINGLE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_unnest_subquery </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enables unnesting of correlated subqueries </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_use_column_stats_for_function </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>enable the use of column statistics for DDP functions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_use_ism </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>Enable Shared Page Tables - ISM </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_use_new_explain_plan </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>if TRUE, use the AUTO size policy cost functions </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_use_nosegment_indexes </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>use nosegment indexes in explain plan </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_use_realfree_heap </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>use real-free based allocator for PGA memory </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_use_seq_process_cache </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>whether to use process local seq cache </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_use_vector_post </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>use vector post </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_verify_undo_quota </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>TRUE - verify consistency of undo quota statistics </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_wait_for_sync </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>wait for sync on commit MUST BE ALWAYS TRUE </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b><td><b><font color="#000000"</font>Sim</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_walk_insert_threshold </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>maximum number of unusable blocks to walk across freelist </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>0 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_watchpoint_on </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>is the watchpointing feature turned on? </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>FALSE </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_write_clones </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>write clones flag </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>3 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr><tr><td><b><font color="#000000"</font><div align=left>_yield_check_interval </div></b></td><td><b><font color="#A0A0A0"</font><div align=left>interval to check whether actses should yield </div></td></b><td><b><font color="#A0A0A0"</font><div align=center>100000 </div></td></b><td><b><font color="#FF0000"</font>Não</b></td><td><b><font color="#A0A0A0"</font><div align=center>TRUE </div></td></b></tr></table>
     <br><br>
     <p align="center">

     <a href="javascript:history.go(-1);">Retorna a Tela Anterior</a>
   </body>
</html>