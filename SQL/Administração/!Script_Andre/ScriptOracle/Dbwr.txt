--
-- Lista informaçoes para verificar contencao do DBWR
--
--select a.class, wait_count, sum(value) Con_Get,
--       ((wait_count /sum(value)) * 100) Pct
--from v$waitstat a, v$sysstat b
--where name in ('db block gets','consistent gets')
--group by a.class, wait_count
--/
--
-- ========================================
--
set serveroutput on size 1000000
accept vDataInicio prompt 'Informe a Data Inicial (dd/mm/yyyy) =>  ';
accept vDataFim    prompt 'Informe a Data Final   (dd/mm/yyyy) =>  ';
accept vIntervalo NUMBER FORMAT '99' DEFAULT '0' prompt 'Intervalo em Horas             (HH) =>  ';
DECLARE
-- teste number;
 vData varchar2(10);
 vphyrds number;
-- vHoras number;
 vphywrts number;
-- vdata_inicio date;
-- vdata_fim date;
-- 
 bsnap_id number;
 bsnap_time date;
 vsnap_id number;
 vsnap_time date;
 vasnap_id number;
 vasnap_time date;
--
Cursor c_periodo_hn (pinicio varchar2,pfim varchar2) IS
  SELECT snap_id,snap_time
  FROM 
     perfstat.stats$snapshot   
  WHERE 
     snap_time >= to_date(pinicio,'dd/mm/yyyy') and  snap_time < (to_date(pfim,'dd/mm/yyyy')+1/12);  
--  group by   to_char(snap_time,'DD/MM/YYYY HH24');
--
 cursor c_statistics (i_snap_id number) is
     select name,value
       from stats$sysstat
       where snap_id   = i_snap_id
             and name like 'DBWR%' ;
--          and name            = i_name;
--
--
--
-- DBWR
--            select class,wait_count
--            from perfstat.stats$waitstat
--            where snap_id         = i_snap_id;
--               and dbid            = p_dbid
--
-- Procedure Imprimir 
--
  Function Cal_Dif_Evento (pname varchar2,pbsnap_id number,pesnap_id number) RETURN number is
      cursor SY (i_snap_id number,i_name varchar2) is
        select total_waits
        from stats$system_event
        where snap_id         = i_snap_id
             and event        = i_name;
      eval number;
      bval number;
      begin
         /* Get start value */
         open SY (pbsnap_id,pname); fetch SY into bval;
         if SY%notfound then
            bval :=0;
         end if; close SY;

         /* Get end value */
         open SY (pesnap_id,pname); fetch SY into eval;
         if SY%notfound then
            eval :=0;
         end if; close SY;

         /* Return difference */
         return eval - bval;
   end ;
--
--
Procedure Imprime_Statisticas(pinicio_snap_time date,pfim_snap_time date,pinicio_snap_id number ,pfim_snap_id number) 
Is 
--  vparameter        varchar2(60);
--  vgets             number(10);
--  vgetmisses        number(10);
--  vHitDicCache      number(10);
--  vDivisor              number(10);
  vTotal          number(10);
  vname              varchar2(60);
  vvalue         number(10);
  vPorcWaitGets       number(10);
  vTotalBlockGet      number(10);
--
--  vTotalGetMisses         number(10);

--DBWR
Begin
   Dbms_Output.Put_Line('-------------------------------------------------------------------------------');
   Dbms_Output.Put_Line(To_char(pinicio_snap_time,'dd/mm/yyyy hh24:mi')||' ---- '||To_char(pfim_snap_time,'dd/mm/yyyy hh24:mi')); 
   Dbms_Output.Put_Line('-------------------------------------------------------------------------------');
   Dbms_Output.Put_Line(Rpad('Tipo de Objeto ',29,' ')||Rpad('Wait',13,' '));
--   vTotalBlockGet := Cal_Block_Gets(pfim_snap_id,pinicio_snap_id);
--   Dbms_Output.Put_Line('passo1');
   For r_statistics in c_statistics(pinicio_snap_id)  Loop
  --     Dbms_Output.Put_Line('passo2');
  --     Select class,wait_count Into vclass,vwait_count
  --     From perfstat.stats$waitstat
  --     Where class = r_wait_data_block.class And snap_id = pfim_snap_id;
       Select name,value into vname,vvalue
       From stats$sysstat
       Where snap_id             = pfim_snap_id
             and name            = r_statistics.name;
  --
       If SQL%NOTFOUND  Then
          Dbms_Output.Put_Line('nao achou');
       End if;
--
       vTotal      := vvalue - r_statistics.value;
--       
--     vPorcWaitGets   := round((vTotalWait/vTotalBlockGet)*100,2);
--
--
--
--      valor := Cal_Dif_Evento(bsnap_id,esnap_id);
      Dbms_Output.Put_Line(rpad(r_statistics.name,40,' ')||' '||rpad(vTotal,10,' '));
--        vTotal := Cal_Dif_Evento('buffer busy waits',pinicio_snap_id,pfim_snap_id);
--      Dbms_Output.Put_Line(rpad('buffer busy waits',30,' ')||' '||rpad(vTotal,10,' '));
   End Loop;
    vTotal := Cal_Dif_Evento('free buffer waits',pinicio_snap_id,pfim_snap_id);
   Dbms_Output.Put_Line(rpad('free buffer waits',40,' ')||' '||rpad(vTotal,10,' '));
End; 
--
--
-- Function Det_Data(psnap_id number) return date is
-- vdata date;
-- Begin
--   select snap_time into vdata
--   from perfstat.stats$snapshot
--   where snap_id= psnap_id;
-- Return(vdata);
-- End;
--
--
-- vData varchar2(10);
-- vphyrds number;
-- vphywrts number;
--
Begin
--
If not c_periodo_hn%ISOPEN then open c_periodo_hn('&vDataInicio','&vDataFim'); end if;
fetch c_periodo_hn into bsnap_id, bsnap_time;
while true Loop
  Fetch c_periodo_hn Into vsnap_id, vsnap_time;
  If c_periodo_hn%NOTFOUND then
     close c_periodo_hn;
     exit;
  End if;
--  If to_char(vsnap_time,'dd/mm/yyyy:hh24mi') <= to_char(bsnap_time+(12/24),'dd/mm/yyyy:hh24mi') Then
    If to_char(vsnap_time,'dd/mm/yyyy:hh24mi') >= to_char(bsnap_time+(&vIntervalo/24),'dd/mm/yyyy:hh24mi') Then
     -- vasnap_id   := vsnap_id;
     -- vasnap_time := vsnap_time;
     --  Else
    Imprime_Statisticas(bsnap_time,vsnap_time,bsnap_id,vsnap_id);
--    Imprime_Statisticas(bsnap_time,vasnap_time,bsnap_id,vasnap_id);
    bsnap_time := vsnap_time;
    bsnap_id   := vsnap_id;
  End If;
End Loop;
--    
-- End If;
End ;
/
--
--



