VARIABLE MSG VARCHAR2(100) /*DECLARANDO UMA VARIAVEL NO SQL PLUS'*/

/*PL/SQL INTRODUÇÃO*/

DECLARE 
	VALOR NUMBER := &VAL; 
BEGIN
	IF VALOR > 0 THEN
		:MSG := 'VALOR MAIOR QUE 0';
	ELSIF VALOR = 0 THEN 
		:MSG := 'VALOR IGUAL A 0';
	ELSE
		:MSG := 'VALOR MENOR QUE 0';
	END IF;
END;


--DECLARAÇÃO DE TIPOS IGUAIS AO TIPOS DA TABELA.COLUNA%TYPE
DECLARE 
	V_CODMEDICO MEDICO.CODMEDICO%TYPE;
	V_NOME MEDICO.NOME%TYPE;
BEGIN
	BEGIN 
		SELECT CODMEDICO, NOME
		INTO V_CODMEDICO, V_NOME
		FROM MEDICO --RESGATANDO O CÓDIGO E NOME DO MEDICO E JOGANDO EM VARIAVEIS DECLARADAS NA CLÁUSULA INTO
		WHERE CODMEDICO = &CODIGO_MEDICO;
		IF V_CODMEDICO = V_CODMEDICO THEN
			:MSG := 'CODIGO: '||V_CODMEDICO||'  NOME: '||V_NOME;
		END IF;
	EXCEPTION
		/*TRATANDO EXCESSÕES*/
		WHEN NO_DATA_FOUND THEN --QUANDO A QUERY NÃO RETORNA NENHUM VALOR
			V_CODMEDICO := NULL;
			V_NOME := NULL;
			:MSG := 'NÃO EXISTE MEDICO COM ESSE CÓDIGO';
		WHEN TOO_MANY_ROWS THEN --QUANDO A QUERY RETORNA MUITAS LINHAS
		--NESSE CASO AS VARIAVEIS RECEBEM O VALOR DA PRIMEIRA LINHA E COLOCA-SE O NULL PARA TRATAR ESSE ERRO
			NULL;
	END;
END;
	

	
DECLARE 
	--DECLARANDO A VARIAVEL COM O TIPO DA TABELA.COLUNA%TYPE NESSE CASO
	--MEDICO.SALARIO%TYPE
	V_SALARIO MEDICO.SALARIO%TYPE;
BEGIN
	BEGIN 
		SELECT SALARIO
		INTO V_SALARIO
		FROM MEDICO
		WHERE SALARIO > 10;
		:MSG := V_SALARIO;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			:MSG := 'ERRO CODIGO: '|| SQLCODE|| ' '|| SQLERRM(SQLCODE);
		WHEN TOO_MANY_ROWS THEN
			NULL;
			:MSG := 'ERRO CODIGO: '|| SQLCODE|| ' '|| SQLERRM(SQLCODE);
	END;
END;