CREATE OR REPLACE PROCEDURE SGPB_PROC.SGPB0040
(
  INTRCOMPETENCIA        PROD_CRRTR.CCOMPT_PROD %TYPE,
  VAR_IDTRIO_TRAB            	varchar2,
  VAR_IARQ_TRAB              	varchar2,
  chrNomeRotinaScheduler VARCHAR2 := 'SGPB9040'
) IS
  -------------------------------------------------------------------------------------------------
  --      BRADESCO SEGUROS S.A.
  --      PROCEDURE       : SGPB0040
  --      DATA            : 15/3/2006 09:38:13
  --      AUTOR           : Flávio Peruggia - ANALISE E DESENVOLVIMENTO DE SISTEMAS
  --      OBJETIVO        : Procedure de importação, de arquivo .txt, do Mapeamento Agencia Corretor (Desmembramento).
  --      ALTERAÇÕES      : Trocou de parametro para ficar fora da carga diária do SGPB
  --                        ASS. Wassily ( 16/10/2007)
  -------------------------------------------------------------------------------------------------
  VAR_ARQUIVO         		utl_file.file_type;
  VAR_REGISTRO_ARQUIVO 		VARCHAR2(500);
  VAR_COUNT            		INTEGER := 1;
  ERRO 						EXCEPTION;
  VAR_LOG_ERRO 				VARCHAR2(2000);
  VAR_CROTNA 				CONSTANT CHAR(8) := 'SGPB9040';
  VAR_IROTNA 				CONSTANT INT := 856;
  ABRE_ARQUIVO_EXCEPTION 	EXCEPTION;
  -- Verifica se a quantidade de registros é igual à informada
  PROCEDURE TRAILER(VAR_REGISTRO_ARQUIVO VAR_REGISTRO_ARQUIVO%TYPE) IS
    VAR_QT_REGISTROS NUMBER;
  BEGIN
    BEGIN
      VAR_QT_REGISTROS := TO_NUMBER(SUBSTR(VAR_REGISTRO_ARQUIVO,16,8));
    EXCEPTION
      WHEN OTHERS THEN
        VAR_LOG_ERRO := 'PROBLEMA AO CARREGAR A QUANTIDADE DE REGISTROS PARA VERIFICAÇÃO.' ||
                        ' -- LINHA: ' || VAR_COUNT || ' -- QUANTIDADE DE REGISTROS: ' ||
                        TO_NUMBER(SUBSTR(VAR_REGISTRO_ARQUIVO,16,8)) || ' -- ERRO ORACLE: ' ||
                        SUBSTR(SQLERRM,1,120);
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,VAR_LOG_ERRO,PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
        RAISE;
    END;
    IF VAR_QT_REGISTROS = VAR_COUNT THEN
      UTL_FILE.FCLOSE(VAR_ARQUIVO);
      COMMIT;
    ELSE
      VAR_LOG_ERRO := 'NÚMERO DE REGISTROS INSERIDOS NÃO BATE COM O NÚMERO DE REGISTROS DO ARQUIVO.' ||
                      ' -- REGISTROS DO ARQUIVO: ' || (VAR_QT_REGISTROS - 2) ||
                      ' -- REGISTROS INSERIDOS: ' || (VAR_COUNT - 2);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,VAR_LOG_ERRO,PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
      RAISE ERRO;
    END IF;
  END TRAILER;
  -- Fim
  -- Verifica se a quantidade de registros é igual à informada
  -- Insere conteúdo nas colunas
  PROCEDURE DETALHE(VAR_REGISTRO_ARQUIVO VAR_REGISTRO_ARQUIVO%TYPE) IS
    V_CUND_PROD       VARCHAR2(20); --MPMTO_AG_CRRTR.CUND_PROD%TYPE;
    V_CCRRTR_ORIGN    VARCHAR2(20); --MPMTO_AG_CRRTR.CCRRTR_ORIGN%TYPE;
    V_DENTRD_CRRTR_AG VARCHAR2(20); --MPMTO_AG_CRRTR.DENTRD_CRRTR_AG%TYPE;
    V_DSAIDA_CRRTR_AG MPMTO_AG_CRRTR.DSAIDA_CRRTR_AG%TYPE;
    V_CCRRTR_DSMEM    VARCHAR2(20); --MPMTO_AG_CRRTR.CCRRTR_DSMEM%TYPE;
    SPONTO            VARCHAR2(5) := '#XXXX';
  BEGIN
    SPONTO := '#0001';
    --Código da Unidade de Produção
    V_CUND_PROD := SUBSTR(VAR_REGISTRO_ARQUIVO,2,3);
    SPONTO      := '#0002';
    --Código do corretor Original
    V_CCRRTR_ORIGN := SUBSTR(VAR_REGISTRO_ARQUIVO,5,6);
    SPONTO         := '#0003';
    --Código de entrada do corretor
    V_DENTRD_CRRTR_AG := SUBSTR(VAR_REGISTRO_ARQUIVO,11,8);
    SPONTO            := '#0004';
    --Data de Saida do corretor
    BEGIN
      V_DSAIDA_CRRTR_AG := TO_DATE(SUBSTR(VAR_REGISTRO_ARQUIVO,19,8),'YYYYMMDD');
    EXCEPTION
      WHEN OTHERS THEN
        V_DSAIDA_CRRTR_AG := NULL;
    END;
    SPONTO := '#0005';
    --Código do corretor desmembrado
    V_CCRRTR_DSMEM := TO_NUMBER(SUBSTR(VAR_REGISTRO_ARQUIVO,27,6));
    SPONTO         := '#0006';
--ALEXANDRE CYSNE ESTEVES 25-05-2007
--validando se a data inicio e igual a data fim
--caso seja a linha sera ignorada
--ALEXANDRE CYSNE ESTEVES 28-05-2007
--validando se a data inicio e maior ou igual a data fim
--caso seja a linha sera ignorada    
IF (TO_DATE(V_DENTRD_CRRTR_AG,'YYYYMMDD') >= V_DSAIDA_CRRTR_AG) THEN
    VAR_LOG_ERRO := 'LINHA IGNORADA: >= '||V_CUND_PROD||' '||V_CCRRTR_ORIGN||' '||TO_DATE(V_DENTRD_CRRTR_AG,'YYYYMMDD')||' '||V_DSAIDA_CRRTR_AG;
    PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,VAR_LOG_ERRO,PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
ELSE
    BEGIN
      INSERT INTO MPMTO_AG_CRRTR
        	(CUND_PROD,CCRRTR_ORIGN,DENTRD_CRRTR_AG,DSAIDA_CRRTR_AG,CCRRTR_DSMEM)
      	VALUES (V_CUND_PROD,V_CCRRTR_ORIGN,TO_DATE(V_DENTRD_CRRTR_AG,'YYYYMMDD'),V_DSAIDA_CRRTR_AG,V_CCRRTR_DSMEM);
    EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        	BEGIN
        		UPDATE MPMTO_AG_CRRTR
             		SET DSAIDA_CRRTR_AG = V_DSAIDA_CRRTR_AG
           			WHERE CUND_PROD = V_CUND_PROD
             		AND CCRRTR_ORIGN = V_CCRRTR_ORIGN
             		AND DENTRD_CRRTR_AG = TO_DATE(V_DENTRD_CRRTR_AG,'YYYYMMDD');
        	EXCEPTION
          		WHEN OTHERS THEN
            		RAISE;
        	END;
      WHEN OTHERS THEN
        	RAISE;
    END;
--FIM DA VALIDACAO    
END IF;
EXCEPTION
    WHEN OTHERS THEN
      --ALEXANDRE CYSNE
      VAR_LOG_ERRO := 'LINHA EXCEPTION: '||V_CUND_PROD||' '||V_CCRRTR_ORIGN||' '||TO_DATE(V_DENTRD_CRRTR_AG,'YYYYMMDD')||' '||V_DSAIDA_CRRTR_AG||' -- ERRO ORACLE: ' || SUBSTR(SQLERRM,1,120);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,VAR_LOG_ERRO,PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
          
      VAR_LOG_ERRO := 'DADOS:' || ' -- LINHA: ' || VAR_COUNT || ' -- SPonto: ' || SPONTO ||
                      ' -- CUND_PROD: ' || V_CUND_PROD || ' -- CCRRTR_ORIGN: ' || V_CCRRTR_ORIGN ||
                      ' -- DENTRD_CRRTR_AG: ' || V_DENTRD_CRRTR_AG || ' -- DSAIDA_CRRTR_AG: ' ||
                      V_DSAIDA_CRRTR_AG || ' -- CRRTR_DSMEM: ' || V_CCRRTR_DSMEM ||
                      ' -- ERRO ORACLE: ' || SUBSTR(SQLERRM,1,120);
      PC_UTIL_01.SGPB0028(VAR_LOG_ERRO,VAR_CROTNA);
  END DETALHE;
  -- Fim Insere conteúdo nas colunas
BEGIN
  -- Iniciando Execução
  PR_ATUALIZA_STATUS_ROTINA(chrNomeRotinaScheduler,VAR_IROTNA,PC_UTIL_01.VAR_ROTNA_PC);
  BEGIN
    BEGIN
      VAR_ARQUIVO := UTL_FILE.FOPEN(VAR_IDTRIO_TRAB, VAR_IARQ_TRAB, 'R');
    EXCEPTION
      WHEN OTHERS THEN
        RAISE ABRE_ARQUIVO_EXCEPTION;
    END;
    UTL_FILE.GET_LINE(VAR_ARQUIVO,VAR_REGISTRO_ARQUIVO);
    -- Verifica se o arquivo tem header
    IF SUBSTR(VAR_REGISTRO_ARQUIVO,1,1) <> 0 THEN
       RAISE_APPLICATION_ERROR(-20002,'ERRO O ARQUIVO NÃO TEM HEADER');
    END IF;
--DELETANDO A TABELA PARA CORRECAO
--ALEXANDRE CYSNE ESTEVES 31-05-2007
--PROCESSO TEMPORARIO PARA CORRECAO DA TABELA
--ESSA OPCAO VAI RODAR APENAS UMA VEZ EM PRODUCAO (01-06-2007)
--APOIO ISSO VAI SER FEITO A RE-EXECUCAO DO PIM SEM
--A OPCAO ABAIXO
--BEGIN
--  DELETE FROM MPMTO_AG_CRRTR;  
--  VAR_LOG_ERRO := 'TABELA MPMTO_AG_CRRTR DELETADA';
--  PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,VAR_LOG_ERRO,PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
  --COMMIT;
--  EXCEPTION
--    WHEN OTHERS THEN
--      RAISE_APPLICATION_ERROR(-200706,SUBSTR(SQLERRM,1,120));
--END;
--FIM
    BEGIN
      	-- Varrendo os registros dos arquivos
     	 LOOP
        	UTL_FILE.GET_LINE(VAR_ARQUIVO,VAR_REGISTRO_ARQUIVO);
        	VAR_COUNT := VAR_COUNT + 1;
        	BEGIN
          		CASE
            		WHEN SUBSTR(VAR_REGISTRO_ARQUIVO,1,1) = 1 THEN
              				DETALHE(VAR_REGISTRO_ARQUIVO);
            		WHEN SUBSTR(VAR_REGISTRO_ARQUIVO,1,1) = 9 THEN
              				TRAILER(VAR_REGISTRO_ARQUIVO);
              				EXIT;
          		END CASE;
        	EXCEPTION
          		WHEN OTHERS THEN
            		RAISE;
        	END;
      	END LOOP;
    EXCEPTION
      	WHEN OTHERS THEN
        	RAISE;
    END;
    -- Execução terminada sem Erro
    PR_ATUALIZA_STATUS_ROTINA(chrNomeRotinaScheduler,VAR_IROTNA,PC_UTIL_01.VAR_ROTNA_PO);
    PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,'PROCESSO EXECUTADO COM SUCESSO.',PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
  EXCEPTION
    WHEN ABRE_ARQUIVO_EXCEPTION THEN
      VAR_LOG_ERRO := 'ERRO. INVALID PATH. DIR: '||VAR_IDTRIO_TRAB||' - ARQ: '||VAR_IARQ_TRAB;
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,VAR_LOG_ERRO,PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
      PR_ATUALIZA_STATUS_ROTINA(chrNomeRotinaScheduler,VAR_IROTNA,PC_UTIL_01.VAR_ROTNA_PE);
      Raise_Application_Error(-20003,'ERRO. INVALID PATH. DIR: '||VAR_IDTRIO_TRAB||' - ARQ: '||VAR_IARQ_TRAB);
    WHEN OTHERS THEN
      ROLLBACK;
      UTL_FILE.FCLOSE(VAR_ARQUIVO);
      VAR_LOG_ERRO := 'PROBLEMA AO CARREGAR OS REGISTROS DE PRODUÇÃO NO RAMO BILHETE.' ||
                      ' -- LINHA: ' || VAR_COUNT || ' -- ERRO ORACLE: ' ||SUBSTR(SQLERRM,1,120);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA,VAR_LOG_ERRO,PC_UTIL_01.VAR_LOG_PROCESSO,NULL,NULL);
      PR_ATUALIZA_STATUS_ROTINA(chrNomeRotinaScheduler,VAR_IROTNA,PC_UTIL_01.VAR_ROTNA_PE);
      Raise_Application_Error(-20003,'ERRO. INVALID PATH. DIR: '||VAR_IDTRIO_TRAB||' - ARQ: '||VAR_IARQ_TRAB);
  END;
END SGPB0040;
/

