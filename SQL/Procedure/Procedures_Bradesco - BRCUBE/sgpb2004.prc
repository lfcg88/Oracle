CREATE OR REPLACE PROCEDURE SGPB_PROC.SGPB2004 IS
-------------------------------------------------------------------------------------------------
--      BRADESCO SEGUROS S.A.
--      DATA            : 24/02/2008
--      AUTOR           : MONIQUE MARQUES - VALUE TEAM
--      PROGRAMA        : SGPB2000.SQL
--      OBJETIVO        : CARGA DA TABELA AGRUPAMENTO ECONÔMICO CORRETOR
--      ALTERAÇÕES      : 
--                DATA  : 
--                AUTOR : 
--                OBS   : 
-------------------------------------------------------------------------------------------------
-- VARIAVEIS DE TRABALHO         
--
VAR_ERRO 		   			VARCHAR2(1) 				   		:= 'N';
VAR_TABELA	   				VARCHAR2(30) 				   		:= 'CRRTR_PARTC_AGPTO_ECONM';
VAR_LOG                    	LOG_CARGA.RLOG%TYPE;
VAR_LOG_PROCESSO           	LOG_CARGA.CTPO_REG_LOG%TYPE     	:= 'P'; 
VAR_LOG_DADO               	LOG_CARGA.CTPO_REG_LOG%TYPE    		:= 'D'; 
VAR_CSIT_CTRLM         		SIT_ROTNA_CTRLM.CSIT_CTRLM%TYPE;
VAR_TOT_REG_LIDO_BODY   	NUMBER						  		:= 0;
VAR_TOT_REG_PROC           	NUMBER						 		:= 0;
VAR_TOT_REG_ALT		   		NUMBER								:= 0;
VAR_FIM_PROCESSO_ERRO      	EXCEPTION;
--
-- VARIAVEIS PARA CONTROLE DE TEMPO DE PROCESSAMENTO
W_HORA_PROC_INICIAL         DATE  				   			    := SYSDATE;
W_TEMPO_PROC                NUMBER;
-- VARIAVEIS PARA ABERTURA E MANIPULAÇÃO DO ARQUIVO              

VAR_ARQUIVO                	UTL_FILE.FILE_TYPE;                   
VAR_REGISTRO_ARQUIVO       	VARCHAR2(500);
--                         	VAI SER ALIMENTADO PELO PARAMETRO DE AMBIENTE                    
VAR_CAMBTE                 	ARQ_TRAB.CAMBTE%TYPE;
VAR_CSIST                  	ARQ_TRAB.CSIST%TYPE   	   			:= 'SGPB'; 
VAR_CROTNA                 	ARQ_TRAB.CROTNA%TYPE        	    := 'SGPB2004';

VAR_CTPO_ACSSO              ARQ_TRAB.CTPO_ACSSO%TYPE    	    := 'R';
VAR_CSEQ_ARQ_TRAB           ARQ_TRAB.CSEQ_ARQ_TRAB%TYPE 	    := 1;
VAR_IARQ_TRAB               ARQ_TRAB.IARQ_TRAB%TYPE;
VAR_IDTRIO_TRAB             DTRIO_TRAB.IDTRIO_TRAB%TYPE;
-- VARIAVEIS DO PARAMETRO DE CARGA
VAR_CPARM                  PARM_CARGA.CPARM%TYPE       		    := 736;
VAR_DCARGA                 PARM_CARGA.DCARGA%TYPE;            
VAR_DPROX_CARGA            PARM_CARGA.DPROX_CARGA%TYPE;       
VAR_DINIC_ROTNA            DATE               					:= SYSDATE;
-- VARIAVEIS PARA ALTERACAO DA SITUACAO DA ROTINA
VAR_ROTNA_AP		       ROTNA.CSIT_ROTNA%TYPE	   			:= 'AP'; -- A PROCESSAR
VAR_ROTNA_PC	   	       ROTNA.CSIT_ROTNA%TYPE	 			:= 'PC'; -- PROCESSANDO
VAR_ROTNA_PO   		       ROTNA.CSIT_ROTNA%TYPE	 			:= 'PO'; -- PROCESSADO OK
VAR_ROTNA_PE	   	       ROTNA.CSIT_ROTNA%TYPE	  			:= 'PE'; -- PROCESSADO COM ERRO
VAR_STATUS_ROTNA	       ROTNA.CSIT_ROTNA%TYPE;
-- VARIAVEL REFERENTE A TABELA ALVO 
WROW                       CRRTR_PARTC_AGPTO_ECONM%ROWTYPE;
--
-- LISTA DE SITUACAO PARA TRATAMENTO DE ERROS DO CONTROL-M.
-- 1 - Término normal, processos dependentes podem continuar.
-- 2 - Término com alerta, processos dependentes podem continuar,
--      e o log deverá ser encaminhado ao analista.
-- 3 - Término com alerta grave, possível erro de ambiente, 
--     o processo poderá ser reiniciado.
-- 4 - Término com erro, o processo não deve prosseguir. 
--     O analista/DBA deverá ser notificado.
-- 5 - Término com erro crítico, o processo não deve prosseguir. 
--     O analista/DBA deverá ser contactado imediatamente.
-- 6 - Término com erro desconhecido. O processo não deve continuar. 
--     O analista deverá ser contactado.
---------------------------------------------------------------------------------------------
PROCEDURE TRATA_PARAMETRO IS
BEGIN

	VAR_CAMBTE := FC_VERIFICA_AMBIENTE_ROTINA;
	
	IF VAR_CAMBTE NOT IN ('DESV', 'PROD') THEN
		VAR_CSIT_CTRLM 	:= 6;
		
		VAR_LOG := 'PARÂMETRO INVÁLIDO. AMBIENTE INFORMADO NO PARÂMETRO: ' || VAR_CAMBTE;
		PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
		
		RAISE VAR_FIM_PROCESSO_ERRO;
	END IF;

	VAR_LOG := 'PARÂMETRO DE AMBIENTE INFORMADO: ' || VAR_CAMBTE;
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
	COMMIT;
	
EXCEPTION
	WHEN OTHERS THEN
		VAR_CSIT_CTRLM 	:= 6;
        VAR_LOG  := 'ERRO NO TRATA PARÂMETRO. -- ERRO ORACLE: '|| SUBSTR( SQLERRM, 1, 120);
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);

        RAISE VAR_FIM_PROCESSO_ERRO;

END TRATA_PARAMETRO;
---------------------------------------------------------------------------------------------
PROCEDURE ABRE_ARQUIVO IS
BEGIN
   BEGIN
      PR_DIRETORIO_ARQUIVO( VAR_CAMBTE,
                            VAR_CSIST,
                            VAR_CROTNA,
                            VAR_CTPO_ACSSO, 
                            VAR_CSEQ_ARQ_TRAB, 
                            VAR_IDTRIO_TRAB, 
                            VAR_IARQ_TRAB );
--
      VAR_LOG := 'DIRETÓRIO: '  || VAR_IDTRIO_TRAB ||
                 ' -- ARQUIVO: '    || VAR_IARQ_TRAB;
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
      VAR_LOG := 'ABRINDO ARQUIVO DE CARGA.';
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
      VAR_ARQUIVO := UTL_FILE.FOPEN(VAR_IDTRIO_TRAB, VAR_IARQ_TRAB, VAR_CTPO_ACSSO);
--
      IF NOT UTL_FILE.IS_OPEN(VAR_ARQUIVO) THEN 
--
         VAR_CSIT_CTRLM := 6;   
--
         VAR_LOG := 'ERRO NA ABERTURA DO ARQUIVO.'||
                    ' -- ERRO ORACLE: '|| SUBSTR(SQLERRM, 1, 120);
         PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
         --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
         UTL_FILE.FCLOSE(VAR_ARQUIVO);
         RAISE VAR_FIM_PROCESSO_ERRO;
--
      END IF;
--
   EXCEPTION
      WHEN OTHERS THEN
--
           VAR_CSIT_CTRLM := 6;
--
           VAR_LOG := 'ERRO AO TENTAR ABRIR O ARQUIVO USANDO UTL_FILE.FOPEN.'||
                      ' -- DIRETORIO: '  || VAR_IDTRIO_TRAB ||
                      ' -- ARQUIVO: '    || VAR_IARQ_TRAB||
                      ' -- ERRO ORACLE: '|| SUBSTR(SQLERRM, 1, 120);
           PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);

           RAISE VAR_FIM_PROCESSO_ERRO;
--
   END;
--
	-- RECUPERA OS DADOS DE PARÂMETRO DE CARGA
	PR_LE_PARAMETRO_CARGA(VAR_CPARM, VAR_DCARGA, VAR_DPROX_CARGA);
	VAR_LOG := 'DATA DA ÚLTIMA CARGA: ' || TO_CHAR(VAR_DCARGA, 'DD/MM/YYYY');
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);

   	VAR_LOG := 'DATA DA PRÓXIMA CARGA: ' || TO_CHAR(VAR_DPROX_CARGA, 'DD/MM/YYYY');
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);

EXCEPTION
   WHEN OTHERS THEN
--
        VAR_CSIT_CTRLM := 6;
        VAR_LOG  := 'ERRO NO ABRE_ARQUIVO. -- ERRO ORACLE: '|| SUBSTR(SQLERRM, 1, 120);
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);

        UTL_FILE.FCLOSE(VAR_ARQUIVO);
        RAISE VAR_FIM_PROCESSO_ERRO;
END ABRE_ARQUIVO;
--------------------------------------------------------------------------------------------- 
PROCEDURE FECHA_ARQUIVO IS
BEGIN
	VAR_LOG := 'FECHANDO ARQUIVO DE CARGA.';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
	
	UTL_FILE.FCLOSE( VAR_ARQUIVO); 
	
	VAR_LOG := 'FECou sem problemas ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
EXCEPTION
	WHEN OTHERS THEN
		VAR_CSIT_CTRLM 	:= 6;

        VAR_LOG  := 'ERRO NO FECHA_ARQUIVO. -- ERRO ORACLE: '||SUBSTR( SQLERRM, 1, 120);
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);

        UTL_FILE.FCLOSE( VAR_ARQUIVO);
        RAISE VAR_FIM_PROCESSO_ERRO;
END FECHA_ARQUIVO;
--------------------------------------------------------------------------------------------- 
FUNCTION EXITE_CRRTR_UNFCA RETURN BOOLEAN IS
VAR_COUNT_AGPTO		NUMBER	:= 0;
VAR_COUNT_CRRTR		NUMBER	:= 0;
VAR_RETORNO			BOOLEAN	:= FALSE;
BEGIN

	SELECT COUNT(*) 
		INTO VAR_COUNT_AGPTO
	FROM CRRTR_UNFCA_CNPJ
	WHERE CTPO_PSSOA = WROW.CTPO_PSSOA_AGPTO_ECONM_CRRTR
	  AND CCPF_CNPJ_BASE = WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR;
	  
	SELECT COUNT(*) 
		INTO VAR_COUNT_CRRTR
	FROM CRRTR_UNFCA_CNPJ
	WHERE CTPO_PSSOA = WROW.CTPO_PSSOA
	  AND CCPF_CNPJ_BASE = WROW.CCPF_CNPJ_BASE;
	  
	IF VAR_COUNT_AGPTO <> 1 THEN
		VAR_LOG := 'RESPONSAVEL PELO AGRUPAMENTO NAO LOCALIZADO. TIPO PESSOA '||WROW.CTPO_PSSOA_AGPTO_ECONM_CRRTR||
				   ' CNPJ BASE '||WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR;
		PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);
		
		VAR_RETORNO	:= FALSE;
	END IF;
	
	IF VAR_COUNT_CRRTR <> 1 THEN
		VAR_LOG := 'CORRETOR NAO LOCALIZADO. TIPO PESSOA '||WROW.CTPO_PSSOA||
				   ' CNPJ BASE '||WROW.CCPF_CNPJ_BASE;
		PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);
		
		VAR_RETORNO	:= FALSE;
	END IF;
	
	IF (VAR_COUNT_AGPTO = 1) AND (VAR_COUNT_CRRTR = 1) THEN
		VAR_RETORNO	:= TRUE;
	END IF;
	
	RETURN (VAR_RETORNO);
	
EXCEPTION
	WHEN OTHERS THEN
		VAR_LOG := 'ERRO NA FUNCAO EXITE_CRRTR_UNFCA.'||
                      ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                      ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
		PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);
END EXITE_CRRTR_UNFCA;
--------------------------------------------------------------------------------------------- 
PROCEDURE CARREGA_DETALHE IS
BEGIN

	VAR_ERRO	:= 'N';       
	WROW 		:= NULL;
---------------------------------------------------------------------------------------------
	BEGIN
		WROW.CTPO_PSSOA_AGPTO_ECONM_CRRTR	:= SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 1);
	EXCEPTION
		WHEN OTHERS THEN
			WROW.CTPO_PSSOA_AGPTO_ECONM_CRRTR	:= NULL;
			VAR_CSIT_CTRLM 	  					:= 5;
			VAR_ERRO 	     	  				:= 'S';
      		VAR_LOG := 'PROBLEMA AO CARREGAR CTPO_PSSOA_AGPTO_ECONM_CRRTR DO ARQUIVO.'||
                       ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                       ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
      		PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);  
	END;
---------------------------------------------------------------------------------------------
	BEGIN
		WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR		:= TO_NUMBER(SUBSTR(VAR_REGISTRO_ARQUIVO, 2, 9));
	EXCEPTION
		WHEN OTHERS THEN
			WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR	:= NULL;
			VAR_CSIT_CTRLM 	  				:= 5;
			VAR_ERRO 	     	  				:= 'S';
			VAR_LOG := 'PROBLEMA AO CARREGAR CCPF_CNPJ_AGPTO_ECONM_CRRTR DO ARQUIVO.'||
                       ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                       ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
			PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);
	END;
---------------------------------------------------------------------------------------------
	BEGIN
 	/*SELECT DINIC_AGPTO_ECONM_CRRTR 
 		INTO WROW.DINIC_AGPTO_ECONM_CRRTR
 	FROM AGPTO_ECONM_CRRTR
 	WHERE CCPF_CNPJ_AGPTO_ECONM_CRRTR = WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR
 	  AND CCPF_CNPJ_AGPTO_ECONM_CRRTR = WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR
 	  AND DFIM_VGCIA_AGPTO_ECONM_CRRTR IS NULL;*/
 	  
		WROW.DINIC_AGPTO_ECONM_CRRTR		:= TO_DATE(SUBSTR(VAR_REGISTRO_ARQUIVO, 11,8));
	EXCEPTION
		WHEN OTHERS THEN
			WROW.DINIC_AGPTO_ECONM_CRRTR 	:= NULL;
			VAR_CSIT_CTRLM 	  			:= 5;
			VAR_ERRO 	     	  			:= 'S';
	      /*VAR_LOG := 'PROBLEMA AO RECUPERAR A DATA INICIO VIGENCIA DA AGRUPAMENTO ECONOMICO.'||
	                 ' -- CTPO_PSSOA_AGPTO_ECONM_CRRTR: '||WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR||
	                 ' -- CCPF_CNPJ_AGPTO_ECONM_CRRTR: '||WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR||
	                 ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);*/
			VAR_LOG := 'PROBLEMA AO CARREGAR DINIC_AGPTO_ECONM_CRRTR DO ARQUIVO.'||
                       ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                       ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
			PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);
	END;
---------------------------------------------------------------------------------------------
	BEGIN
		WROW.CTPO_PSSOA	:= SUBSTR(VAR_REGISTRO_ARQUIVO, 19, 1);
	EXCEPTION
		WHEN OTHERS THEN
			WROW.CTPO_PSSOA_AGPTO_ECONM_CRRTR	:= NULL;
			VAR_CSIT_CTRLM 	  				:= 5;
			VAR_ERRO 	     	  				:= 'S';
			VAR_LOG := 'PROBLEMA AO CARREGAR CTPO_PSSOA DO ARQUIVO.'||
             		   ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                       ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
			PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);  
	END;
---------------------------------------------------------------------------------------------
	BEGIN
		WROW.CCPF_CNPJ_BASE		:= TO_NUMBER(SUBSTR(VAR_REGISTRO_ARQUIVO, 20, 9));
	EXCEPTION
   		WHEN OTHERS THEN
			WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR	:= NULL;
			VAR_CSIT_CTRLM 	  					:= 5;
			VAR_ERRO 	     	  				:= 'S';
      		VAR_LOG := 'PROBLEMA AO CARREGAR CCPF_CNPJ_BASE DO ARQUIVO.'||
                       ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                       ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
			PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);
	END;
---------------------------------------------------------------------------------------------
	BEGIN
		WROW.DINIC_VGCIA_PRTCP_AGPTO_ECONM		:= TO_DATE(SUBSTR(VAR_REGISTRO_ARQUIVO, 29, 8),'DDMMYYYY');
	EXCEPTION
		WHEN OTHERS THEN
			WROW.DINIC_AGPTO_ECONM_CRRTR 	:= NULL;
			VAR_CSIT_CTRLM	 	  			:= 5;
			VAR_ERRO 	     	  			:= 'S';
			VAR_LOG := 'PROBLEMA AO CARREGAR DINIC_VGCIA_PRTCP_AGPTO_ECONM DO ARQUIVO.'||
                       ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                       ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);  
	END;
---------------------------------------------------------------------------------------------
	BEGIN
    	IF TRIM(SUBSTR(VAR_REGISTRO_ARQUIVO, 37, 8)) = '' THEN
    		WROW.DFIM_VGCIA_PRTCP_AGPTO_ECONM		:= NULL;
    	ELSE
    		WROW.DFIM_VGCIA_PRTCP_AGPTO_ECONM		:= TO_DATE(SUBSTR(VAR_REGISTRO_ARQUIVO, 47, 8),'DDMMYYYY');
    	END IF;
 	EXCEPTION
   		WHEN OTHERS THEN
			WROW.DINIC_AGPTO_ECONM_CRRTR 	:= NULL;
      		VAR_CSIT_CTRLM 	  				:= 5;
      		VAR_ERRO 	     	  			:= 'S';

      	VAR_LOG := 'PROBLEMA AO CARREGAR DFIM_VGCIA_PRTCP_AGPTO_ECONM DO ARQUIVO.'||
        	       ' -- LINHA ERRO: '||SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 60)||
                   ' -- ERRO ORACLE: '||SUBSTR(SQLERRM, 1, 120);
		PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);  

	END;
---------------------------------------------------------------------------------------------
	IF EXITE_CRRTR_UNFCA THEN	
	BEGIN
  		INSERT INTO CRRTR_PARTC_AGPTO_ECONM
       				(CTPO_PSSOA_AGPTO_ECONM_CRRTR
					,CCPF_CNPJ_AGPTO_ECONM_CRRTR
					,DINIC_AGPTO_ECONM_CRRTR
					,CTPO_PSSOA
					,CCPF_CNPJ_BASE
					,DINIC_VGCIA_PRTCP_AGPTO_ECONM
					,DFIM_VGCIA_PRTCP_AGPTO_ECONM) 
		VALUES
       			(WROW.CTPO_PSSOA_AGPTO_ECONM_CRRTR
				,WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR
				,WROW.DINIC_AGPTO_ECONM_CRRTR
				,WROW.CTPO_PSSOA
				,WROW.CCPF_CNPJ_BASE
				,WROW.DINIC_VGCIA_PRTCP_AGPTO_ECONM
		        ,WROW.DFIM_VGCIA_PRTCP_AGPTO_ECONM);

		VAR_TOT_REG_PROC := VAR_TOT_REG_PROC + 1;

      	IF VAR_ERRO = 'S' THEN 
      		VAR_CSIT_CTRLM := 5;
          	RAISE VAR_FIM_PROCESSO_ERRO;   
		END IF;
     
		IF MOD(VAR_TOT_REG_PROC+VAR_TOT_REG_ALT, 10000) = 0  THEN
			COMMIT;
		END IF; 
       
   	EXCEPTION
   		WHEN DUP_VAL_ON_INDEX THEN
   			UPDATE CRRTR_PARTC_AGPTO_ECONM
   			SET	DFIM_VGCIA_PRTCP_AGPTO_ECONM	= 	WROW.DFIM_VGCIA_PRTCP_AGPTO_ECONM
   			WHERE CTPO_PSSOA_AGPTO_ECONM_CRRTR	=	WROW.CTPO_PSSOA_AGPTO_ECONM_CRRTR     
   			  AND CCPF_CNPJ_AGPTO_ECONM_CRRTR	=	WROW.CCPF_CNPJ_AGPTO_ECONM_CRRTR
   			  AND DINIC_AGPTO_ECONM_CRRTR      	=	WROW.DINIC_AGPTO_ECONM_CRRTR
   			  AND CTPO_PSSOA                   	=	WROW.CTPO_PSSOA
   			  AND CCPF_CNPJ_BASE               	= 	WROW.CCPF_CNPJ_BASE
   			  AND DINIC_VGCIA_PRTCP_AGPTO_ECONM	= 	WROW.DINIC_VGCIA_PRTCP_AGPTO_ECONM;
   				
   			 VAR_TOT_REG_ALT := VAR_TOT_REG_ALT + 1;
   		WHEN VALUE_ERROR THEN
   			VAR_LOG := 'TESTE -- LINHA DO REGISTRO: '|| SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 299)||      	   
                       ' -- ERRO ORACLE: ' || SUBSTR(SQLERRM, 1, 120);
	      	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);	
    	WHEN OTHERS THEN 
      		VAR_LOG := 'ERRO NO INSERT DOS DADOS DA TABELA ' || VAR_TABELA ||
                       ' -- LINHA DO REGISTRO: '|| SUBSTR(VAR_REGISTRO_ARQUIVO, 1, 299)||      	   
                       ' -- ERRO ORACLE: ' || SUBSTR(SQLERRM, 1, 120);
	      	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
			VAR_CSIT_CTRLM := 5;
          
          	RAISE VAR_FIM_PROCESSO_ERRO; 
	END;
	ELSE
		VAR_LOG := 'PROBOLEMA DE INTEGRIDADE.';
		PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_DADO, NULL, NULL);
--		VAR_CSIT_CTRLM 	:= 5;
--		RAISE VAR_FIM_PROCESSO_ERRO;	
	END IF;        
EXCEPTION
	WHEN OTHERS THEN     
		VAR_CSIT_CTRLM 	:= 6;
        VAR_LOG := 'ERRO NO SUB-PROGRAMA DE CARGA DOS DADOS DA TABELA ' ||VAR_TABELA||
                   ' -- ERRO ORACLE: '|| SUBSTR(SQLERRM, 1, 120);
	    PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
        RAISE VAR_FIM_PROCESSO_ERRO;
END CARREGA_DETALHE;   
---------------------------------------------------------------------------------------------
PROCEDURE TRATA_BODY IS 
VAR_COUNT	NUMBER(10) := 0;
BEGIN

   	VAR_LOG := 'DADOS DO ARQUIVO DE CARGA. INICIANDO TRATAMENTO DO BODY.';
   	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);

	VAR_TOT_REG_LIDO_BODY := 0;
   	VAR_TOT_REG_PROC      := 0;
    
	LOOP    
    	BEGIN
    		UTL_FILE.GET_LINE( VAR_ARQUIVO, VAR_REGISTRO_ARQUIVO);
    	EXCEPTION
        	WHEN NO_DATA_FOUND THEN  -- FIM DE ARQUIVO
            	IF VAR_TOT_REG_LIDO_BODY = 0 THEN
	  	        	VAR_ERRO := 'S';
	          	END IF; 
              	EXIT;
		END;
		
		VAR_TOT_REG_LIDO_BODY := VAR_TOT_REG_LIDO_BODY + 1;
		
		CARREGA_DETALHE;
		
		IF VAR_ERRO = 'S' THEN
        	EXIT;      
      	END IF;   

	END LOOP;

	IF VAR_ERRO = 'N' THEN
	VAR_LOG := '01 ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
    	COMMIT;
   	ELSIF VAR_TOT_REG_LIDO_BODY <> 0 THEN
    	ROLLBACK;
    	VAR_LOG := '02 ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      	FECHA_ARQUIVO;
      	RAISE VAR_FIM_PROCESSO_ERRO;
   	ELSE 
   	VAR_LOG := '03 ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
    	VAR_LOG := 'ERRO. ARQUIVO VAZIO';
	  	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
	  	COMMIT;
	  	VAR_CSIT_CTRLM := 5;   
      	FECHA_ARQUIVO;      
      	RAISE VAR_FIM_PROCESSO_ERRO;   
   END IF;
   VAR_LOG := '04 ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
   FECHA_ARQUIVO;
   VAR_LOG := '05 ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
EXCEPTION
	WHEN VAR_FIM_PROCESSO_ERRO THEN
		 VAR_LOG := '07 ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
		RAISE VAR_FIM_PROCESSO_ERRO;
	WHEN OTHERS THEN
    	VAR_CSIT_CTRLM  := 6;
        VAR_LOG := 'ERRO NO TRATA_BODY. LINHA DO REGISTRO: '||SUBSTR( VAR_REGISTRO_ARQUIVO, 1, 299)||
                   ' -- ERRO ORACLE: '|| SUBSTR(SQLERRM, 1, 120);
	    PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
	    VAR_LOG := '06 ';
	PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
        UTL_FILE.FCLOSE( VAR_ARQUIVO);
        RAISE VAR_FIM_PROCESSO_ERRO;
END TRATA_BODY;
-----------------  PROGRAMA PRINCIPAL  -----------------------------
BEGIN
   -- LIMPA A TABELA DE LOG NO INICIO DO PROCESSO 
   -- (O TRIGGER JOGARAH AS INFORMACOES PARA A TABELA DE HISTORICO)
   PR_LIMPA_LOG_CARGA(VAR_CROTNA);
   
   -- GRAVA LOG INICIAL DE CARGA
   VAR_LOG := 'INICIO DO PROCESSO DE CARGA DA TABELA ' || VAR_TABELA || ' NO DW';
   PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
   --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
   -- A SITUACAO DA ROTINA ATUAL DEVE SER MARCADA COMO 'PC'
   PR_ATUALIZA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM, VAR_ROTNA_PC);
--
   VAR_LOG := '--> STATUS INICIAL DA ROTINA: ' || VAR_STATUS_ROTNA; 
   PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
   --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
   -- A VARIAVEL DE TRATAMENTO DE ERRO DO CONTROL-M SERA INICIALIZADA
   --  COM O FLAG DE TERMINO NORMAL COM SUCESSO (=1)
   VAR_CSIT_CTRLM := 1;
--                                
   VAR_LOG := '-> STATUS INICIAL DO CTRL-M: '||VAR_CSIT_CTRLM;
   PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
   --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
   COMMIT;
   -- TRATA O PARAMETRO DO PROCESSO 
   TRATA_PARAMETRO; 	-- PROCEDURE INTERNA (SUB-PROGRAMA)  
--     
   -- VERIFICA INFORMACOES DO HEADER
   ABRE_ARQUIVO;	-- PROCEDURE INTERNA (SUB-PROGRAMA)
--     
   -- PROCESSA ARQUIVO (CARREGA A TABELA TEMPORARIA)
   TRATA_BODY;		-- PROCEDURE INTERNA (SUB-PROGRAMA)   
--
   -- TEMPO DE PROCESSAMENTO
   W_TEMPO_PROC := ROUND(((SYSDATE - W_HORA_PROC_INICIAL ) * 24), 2);
   VAR_LOG := 'TEMPO DE PROCESSAMENTO EM HORAS : '||TO_CHAR(W_TEMPO_PROC);
   PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
   --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--                   
   IF VAR_CSIT_CTRLM = 1 THEN
    
      VAR_LOG := 'TOTAL DE LIDOS NO ARQUIVO : '|| TO_CHAR(VAR_TOT_REG_LIDO_BODY);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      
      VAR_LOG := 'TOTAL DE REGISTROS PROCESSADOS (INCLUSÃO) : '|| TO_CHAR(VAR_TOT_REG_PROC);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      
      VAR_LOG := 'TOTAL DE REGISTROS PROCESSADOS (ALTERAÇÃO) : '|| TO_CHAR(VAR_TOT_REG_ALT);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
--                                   
      -- ATUALIZA STATUS TERMINO DA ROTINA  
      PR_ATUALIZA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM, VAR_ROTNA_PO);
--
      VAR_STATUS_ROTNA := FC_RECUPERA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM);
--
      VAR_LOG := '--> STATUS FINAL DA ROTINA: ' || VAR_STATUS_ROTNA; 
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
      VAR_LOG := 'TERMINO NORMAL DO PROCESSO (STATUS CTRL-M = 1). '||
                 'OS PROCESSOS DEPENDENTES PODEM CONTINUAR.';
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--      
      -- GRAVA A SITUACAO DESTE PROCESSO NA TABELA DE CONTROLE DO CTRLM   
      PR_GRAVA_LOG_EXCUC_CTRLM( VAR_DINIC_ROTNA, 
                                VAR_CROTNA     , 
                                SYSDATE        , -- DFIM_ROTNA
                                NULL           , -- IPROG
                                NULL           , -- CERRO
                                VAR_LOG        , -- RERRO
                                VAR_CSIT_CTRLM             );           
--      
   ELSIF VAR_CSIT_CTRLM = 2 THEN
--
      VAR_LOG := 'TOTAL DE REGISTROS PROCESSADOS NA EXTRAÇÃO PARA O NI         : '||
        	      TO_CHAR(VAR_TOT_REG_PROC);
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
                                 
      -- ATUALIZA STATUS TERMINO DA ROTINA  
      PR_ATUALIZA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM, VAR_ROTNA_PO);
--
      VAR_STATUS_ROTNA := FC_RECUPERA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM);
--
      VAR_LOG := '--> STATUS FINAL DA ROTINA: ' || VAR_STATUS_ROTNA; 
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
      VAR_LOG := 'TERMINO COM ALERTA (STATUS CTRL-M = 2). '   ||
                 'OS PROCESSOS DEPENDENTES PODEM CONTINUAR. ' ||
    	         'E O LOG DEVERAH SER ENCAMINHADO AO ANALISTA.';
      PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
      --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--      
      -- GRAVA A SITUACAO DESTE PROCESSO NA TABELA DE CONTROLE DO CTRLM   
      PR_GRAVA_LOG_EXCUC_CTRLM( VAR_DINIC_ROTNA, 
                                VAR_CROTNA     , 
                                SYSDATE        , -- DFIM_ROTNA
                                NULL           , -- IPROG
                                NULL           , -- CERRO
                                VAR_LOG        , -- RERRO
                                VAR_CSIT_CTRLM             );           
--      
   END IF;
--           
EXCEPTION
   WHEN VAR_FIM_PROCESSO_ERRO THEN
        VAR_LOG := 'TOTAL DE REGISTROS PROCESSADOS NA EXTRAÇÃO PARA O NI         : '||
		   TO_CHAR(VAR_TOT_REG_PROC);
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);      
--
        -- ATUALIZA STATUS TERMINO DA ROTINA  
        PR_ATUALIZA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM, VAR_ROTNA_PE);
--
        VAR_STATUS_ROTNA := FC_RECUPERA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM);
--
        VAR_LOG := '--> STATUS FINAL DA ROTINA: ' || VAR_STATUS_ROTNA; 
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
        --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
        VAR_LOG := 'ESTE PROCESSO FOI FINALIZADO COM ERRO (STATUS CTRL-M = ' || VAR_CSIT_CTRLM || 
                   ' ). OS PROCESSOS DEPENDENTES NAO DEVEM CONTINUAR. '||
                   'O ANALISTA/DBA DEVERA SER CONTACTADO IMEDIATAMENTE.';
   	    PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
        --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
   	    PR_GRAVA_LOG_EXCUC_CTRLM ( VAR_DINIC_ROTNA, 
                              	   VAR_CROTNA     , 
                                   SYSDATE        , -- DFIM_ROTNA
                                   NULL           , -- IPROG
                                   NULL           , -- CERRO
                                   VAR_LOG        , -- RERRO
                                   VAR_CSIT_CTRLM             );        
--
   WHEN OTHERS THEN
        VAR_CSIT_CTRLM := 6;
--        
        VAR_LOG := 'TOTAL DE REGISTROS PROCESSADOS NA EXTRAÇÃO PARA O NI         : '||
		   TO_CHAR(VAR_TOT_REG_PROC);
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
--              
        VAR_LOG := 'EXCEPTION OTHERS -- ERRO ORACLE: '|| SUBSTR(SQLERRM, 1, 120);
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL); 
        --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--              
        -- ATUALIZA STATUS TERMINO DA ROTINA  
        PR_ATUALIZA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM, VAR_ROTNA_PE);
--
        VAR_STATUS_ROTNA := FC_RECUPERA_STATUS_ROTINA(VAR_CROTNA, VAR_CPARM);
--
        VAR_LOG := '--> STATUS FINAL DA ROTINA: ' || VAR_STATUS_ROTNA; 
        PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
        --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
        VAR_LOG := 'ESTE PROCESSO FOI FINALIZADO COM ERRO (STATUS CTRL-M = 6). '|| 
                   'OS PROCESSOS DEPENDENTES NAO DEVEM CONTINUAR. '				||
                   'O ANALISTA/DBA DEVERA SER CONTACTADO IMEDIATAMENTE.';
   	    PR_GRAVA_MSG_LOG_CARGA(VAR_CROTNA, VAR_LOG, VAR_LOG_PROCESSO, NULL, NULL);
        --DBMS_OUTPUT.PUT_LINE(SUBSTR(VAR_LOG,1,255));
--
   	    PR_GRAVA_LOG_EXCUC_CTRLM ( VAR_DINIC_ROTNA, 
                              	   VAR_CROTNA     , 
                                   SYSDATE        , -- DFIM_ROTNA
                                   NULL           , -- IPROG
                                   NULL           , -- CERRO
                                   VAR_LOG        , -- RERRO
                                   VAR_CSIT_CTRLM             );        
--
END SGPB2004;
/

